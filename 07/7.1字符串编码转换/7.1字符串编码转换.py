"""
7.1 字符串编码转换

最早的字符串编码是美国标准信息交换码,即ASCII码。
它仅对10个数字、26个大写英文字母、26个小写英文字母,以及一些其他符号进行了编码。
ASCII码最多只能表示256个符号,每个字符占一个字节。
随着信息技术的发展,各国的文字都需要进行编码,于是出现了GBK、GB2312、UTF-8编码等。
其中：GBK和GB2312是我国制定的中文编码标准,使用一个字节表示英文字母,两个字节表示中文字符;
UTF-8是国际通用的编码,对全世界所有国家需要用到的字符都进行了编码,它采用一个字节表示英文字符,用3个字节表示中文。
在Python 3.x中,默认采用UTF-8编码,采用这种编码有效地解决了中文乱码的问题。

在Python中,有两种常用的字符串类型,分别为str和bytes。
其中,str表示Unicode字符(ASCII或者其他),bytes表示二进制数据(包括编码的文本)。
这两种类型的字符串不能拼接在一起。通常情况下,str在内存中以Unicode字符表示,一个字符对应若干个字节。
但是,如果要在网络上传输str,或者要将str保存到磁盘上,就需要把str转换为字节类型,即bytes类型。

说明：bytes类型的数据是带有b前缀的字符串(用单引号或双引号表示),例如,b'\xd2\xb0'和b'mr'都是bytes类型的数据。

str和bytes之间可以通过encode()方法和decode()方法进行转换,这两个方法是互为逆过程。下面分别进行介绍。

7.1.1 使用encode()方法编码

encode()方法是str对象的方法,用于将字符串转换为二进制数据(即bytes),这个转换过程也被称为"编码"。其语法格式如下：
str.encode([encoding="utf-8"][,errors="strict"])
参数说明如下。
-  str：表示要进行转换的字符串。
-  encoding="utf-8"：可选参数,用于指定在转码时需要采用的编码,默认为utf-8,如果想使用简体中文,也可以将该参数设置为gb2312。
当只有这一个参数时,可以省略前面的"encoding=",直接写字符编码。
-  errors="strict"：可选参数,用于指定错误处理方式,其可选择的值有strict(遇到非法字符就抛出异常)、
ignore(忽略非法字符)、replace(用"?"替换非法字符)或xmlcharrefreplace(使用XML的字符引用)等。默认值为strict。

说明
在使用encode()方法时,不会修改原字符串,如果打算修改原字符串,则需要对其进行重新赋值。

例如,定义一个名称为verse的字符串,内容为"野渡无人舟自横",然后使用encode()方法将其GBK编码转换为二进制数据,并输出原字符串和转换后的内容,代码如下：
"""
verse = '野渡无人舟自横'
byte = verse.encode('GBK')  # 将GBK编码转换为二进制数据,不处理异常
print('原字符串：', verse)  # 输出原字符串(没有改变)
print('转换后：', byte)  # 输出转换后的二进制数据
"""
执行上述代码,将显示以下内容：
原字符串： 野渡无人舟自横
转换后： b'\xd2\xb0\xb6\xc9\xce\xde\xc8\xcb\xd6\xdb\xd7\xd4\xba\xe1'

如果采用UTF-8编码,转换后的二进制数据如下：
b'\xe9\x87\x8e\xe6\xb8\xa1\xe6\x97\xa0\xe4\xba\xba\xe8\x88\x9f\xe8\x87\xaa\xe6\xa8\xaa'

7.1.2 使用decode()方法解码

decode()方法为bytes对象的方法,用于将二进制数据转换为字符串,即把使用encode()方法转换的结果再转换为字符串,也称为"解码"。
其语法格式如下：
bytes.decode([encoding="utf-8"][,errors="strict"])

参数说明如下。
-  bytes：表示要进行转换的二进制数据,通常是用encode()方法转换的结果。
-  encoding="utf-8"：可选参数,用于指定在解码时所采用的字符编码,默认为utf-8,如果想使用简体中文,也可以将该参数设置为gb2312。
当只有这一个参数时,可以省略前面的"encoding=",直接写字符编码。
误区警示：在指定解码采用的字符编码时,需要与编码时采用的字符编码一致。
-  errors="strict"：可选参数,用于指定错误处理方式,其可选择的值有strict(遇到非法字符就抛出异常)、ignore(忽略非法字符)、replace(用"?"替换非法字符)或xmlcharrefreplace(使用XML的字符引用)等,默认值为strict。

说明
在使用decode()方法时,不会修改原字符串,如果打算修改原字符串,则需要对其进行重新赋值。

例如,需要对7.1.1节的示例中已被编码后所得到的二进制数据(保存在变量byte中)进行解码,可以使用下列代码：

print('解码后：',byte.decode("GBK"))  # 对二进制数据进行解码

执行上述代码,将显示以下内容：
解码后： 野渡无人舟自横
"""