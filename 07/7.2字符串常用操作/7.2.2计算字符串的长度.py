"""
7.2.2 计算字符串的长度

由于不同的字符占字节数不同,因此如果要计算字符串的长度,则需要先了解各字符所占的字节数。
在Python中,数字、英文、小数点、下画线和空格占一个字节;一个汉字可能会占2～4个字节,占几个字节取决于采用的编码。
汉字在GBK/GB2312编码中占两个字节,在UTF-8/unicode中一般占3个字节(或4个字节)。
下面以Python默认的UTF-8编码为例进行说明,即一个汉字占3个字节,如图7.3所示。

Python提供了len()函数计算字符串的长度。其语法格式如下：
len(string)
其中,string用于指定要进行长度统计的字符串。

例如,定义一个字符串,内容为"人生苦短,我用Python!",然后应用len()函数计算该字符串的长度,代码如下：
"""
str1 = '人生苦短，我用Python!'  # 定义字符串
length = len(str1)  # 计算字符串的长度
print(length)
"""
执行上述代码,将显示"14"。

从上述结果中可以看出,默认的情况下,当使用len()函数计算字符串的长度时,不区分英文、数字和汉字,所有字符都被认为是一个字符。

在实际开发中,有时需要获取字符串实际所占的字节数,即：如果采用UTF-8编码,则汉字占3个字节;
而如果采用GBK或者GB2312,则汉字占两个字节。这时,可以通过使用encode()方法进行编码后再进行获取。
例如,如果要获取采用UTF-8编码的字符串的长度,可以使用下列代码：
"""
str1 = '人生苦短，我用Python!'  # 定义字符串
length = len(str1.encode())  # 计算UTF-8编码的字符串的长度
print(length)
"""
执行上述代码,将显示"28"。其原因在于,汉字和中文标点符号共7个,占21个字节,而英文字母和英文的标点符号共7个,占7个字节。
因此,这里共28个字节。

如果要获取采用GBK编码的字符串的长度,可以使用下列代码：
"""
str1 = '人生苦短，我用Python!'    # 定义字符串
length = len(str1.encode('gbk'))  # 计算GBK编码的字符串的长度
print(length)
"""
执行上述代码,将显示"21"。其原因在于,汉字和中文标点符号共7个,占14个字节,而英文字母和英文的标点符号共7个,占7个字节。
因此,这里共21个字节。
"""